{
  "inputs": [],
  "name": "self",
  "outputs": [
    {
      "components": [
        {
          "internalType": "contract IERC20",
          "name": "underwritingToken",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "start",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "expiration",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "underwritingTokenDecimals",
          "type": "uint8"
        }
      ],
      "internalType": "struct Vault.VaultConfig",
      "name": "config",
      "type": "tuple"
    },
    {
      "components": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "numerator",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "denominator",
                  "type": "uint128"
                }
              ],
              "internalType": "struct FractionLib.Fraction[]",
              "name": "expectedXVector",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "numerator",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "denominator",
                  "type": "uint128"
                }
              ],
              "internalType": "struct FractionLib.Fraction[]",
              "name": "varCovarMatrix",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "numerator",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "denominator",
                  "type": "uint128"
                }
              ],
              "internalType": "struct FractionLib.Fraction",
              "name": "lambda",
              "type": "tuple"
            }
          ],
          "internalType": "struct AMM.AMMConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "internalType": "struct AMM.AMMStorage",
      "name": "amm",
      "type": "tuple"
    },
    {
      "components": [
        {
          "components": [
            {
              "internalType": "contract IERC20Mintable",
              "name": "standard",
              "type": "address"
            },
            {
              "internalType": "contract IERC20Mintable",
              "name": "rollover",
              "type": "address"
            }
          ],
          "internalType": "struct UnderwriterPosition.DualERC20",
          "name": "underwritingPositionERC20",
          "type": "tuple"
        },
        {
          "internalType": "contract IRHVault",
          "name": "nextVault",
          "type": "address"
        },
        {
          "internalType": "uint56",
          "name": "poolCount",
          "type": "uint56"
        },
        {
          "internalType": "uint32",
          "name": "latestInteraction",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "premiums",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premiumsAccruedPerShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "premiumDripBasis",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "allocationVector",
          "type": "uint256[]"
        }
      ],
      "internalType": "struct Vault.VaultState",
      "name": "state",
      "type": "tuple"
    }
  ],
  "stateMutability": "view",
  "type": "function"
}
