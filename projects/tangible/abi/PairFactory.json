{
  "Initialized": "event Initialized(uint8 version)",
  "OwnershipTransferred": "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "PairCreated": "event PairCreated(address indexed token0, address indexed token1, bool stable, address pair, uint256)",
  "Paused": "event Paused(address account)",
  "PrivilegedAccountStatusUpdated": "event PrivilegedAccountStatusUpdated(address indexed account, bool _added)",
  "Unpaused": "event Unpaused(address account)",
  "FEE_PRECISION": "uint256:FEE_PRECISION",
  "MAX_FEE": "uint256:MAX_FEE",
  "acceptFeeManager": "function acceptFeeManager()",
  "createPair": "function createPair(address tokenA, address tokenB, bool stable) returns (address pair)",
  "feeManager": "address:feeManager",
  "getFee": "function getFee(bool _stable) view returns (uint256)",
  "getFeeAmount": "function getFeeAmount(bool _stable, uint256 _amount, address _account) view returns (uint256)",
  "getPair": "function getPair(address, address, bool) view returns (address)",
  "initialize": "function initialize(address _pairImplementation)",
  "isPair": "function isPair(address) view returns (bool)",
  "isPrivileged": "function isPrivileged(address _account) view returns (bool)",
  "owner": "address:owner",
  "pairImplementation": "address:pairImplementation",
  "pairManager": "address:pairManager",
  "pairs": "address[]:pairs",
  "pause": "function pause()",
  "paused": "bool:paused",
  "pendingFeeManager": "address:pendingFeeManager",
  "renounceOwnership": "function renounceOwnership()",
  "setFee": "function setFee(bool _stable, uint256 _fee)",
  "setFeeManager": "function setFeeManager(address _feeManager)",
  "setPairImplementationAddress": "function setPairImplementationAddress(address _pairImplementation)",
  "setPairManager": "function setPairManager(address _pairManager)",
  "stableFee": "uint256:stableFee",
  "transferOwnership": "function transferOwnership(address newOwner)",
  "unpause": "function unpause()",
  "updatePairFees": "function updatePairFees(address pair)",
  "updatePrivilegedAccount": "function updatePrivilegedAccount(address _account, bool _addToPrivileged)",
  "volatileFee": "uint256:volatileFee"
}